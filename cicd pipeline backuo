pipeline {
    agent any

    environment {
        DOCKER_HUB_USER = 'raghurk'  // Your Docker Hub username
        DOCKER_HUB_CREDENTIALS = 'dockerhub-credentials'  // Replace with Jenkins Credential ID
        FRONTEND_IMAGE = 'raghurk/frontend:latest'
        BACKEND_IMAGE = 'raghurk/backend:latest'
        GIT_URL = '//'
        GIT_BRANCH = 'dev'
    }

    stages {
        stage('Checkout Code') {
            steps {
                sh 'ls -l'
                git branch: "${GIT_BRANCH}", url: "${GIT_URL}"
            }
        }

        stage('Build and Push Docker Images') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', DOCKER_HUB_CREDENTIALS) {
                        sh 'ls -l'
                        // Build and push frontend
                        sh 'docker build -t $FRONTEND_IMAGE -f ./frontend/dockerfile-frontend ./frontend'
                        sh 'docker push $FRONTEND_IMAGE'

                        // Build and push backend
                        sh 'docker build -t $BACKEND_IMAGE -f ./backend/dockerfile-backend ./backend'
                        sh 'docker push $BACKEND_IMAGE'
                    }
                }
            }
        }

        stage('Deploy with Docker Compose') {
            steps {
                sh 'docker-compose down || true' // Stop existing containers if running
                sh 'docker-compose up -d --pull always'
            }
        }
    }

    post {
        always {
            sh 'docker images'
        }
        failure {
            echo 'Pipeline Failed!'
        }
        success {
            echo 'Deployment Successful!'
        }
    }
}
